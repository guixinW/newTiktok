# Headless Service for the MySQL StatefulSet
# A StatefulSet requires a "headless" service to control the network domain of its pods.
# This allows each pod to get a unique, stable DNS name (e.g., mysql-0.mysql).
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  # By setting clusterIP to None, we make this a headless service.
  clusterIP: None
---
# StatefulSet for the MySQL server
# This replaces the previous Deployment and separate PersistentVolumeClaim.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  # The serviceName must match the name of the headless service defined above.
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "123456"
            - name: MYSQL_DATABASE
              value: "newTik"
          volumeMounts:
            # This name must match the name of the volumeClaimTemplate below.
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
  # volumeClaimTemplates dynamically create a PersistentVolumeClaim for each pod.
  # This ensures each MySQL pod gets its own stable, persistent storage.
  # This replaces the need for a separate PVC resource.
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi