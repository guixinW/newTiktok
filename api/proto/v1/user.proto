// 使用 proto3 语法
syntax = "proto3";

// 定义包名，有助于防止命名冲突
package user_v1;

option go_package = "/internal/common/genproto/user";

// 引入常用的 protobuf 类型
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// 定义 User 服务的 gRPC 接口
service UserService {
  // RPC 方法 1: 创建用户 (对应 CreateUser Command)
  // 这是一个幂等操作，如果用户已存在，不应返回错误。
  rpc CreateUser(CreateUserRequest) returns (google.protobuf.Empty);

  // RPC 方法 2: 更新用户信息 (对应 UpdateUser Command)
  rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty);

  // RPC 方法 3: 获取用户详细信息 (对应 InformationOfUser Query)
  rpc GetUserInformation(GetUserInformationRequest) returns (User);
}

// --- 消息定义 ---

// User 消息体，对应你的 query.User DTO
// 这是服务间传输用户数据的标准结构
message User {
  string uuid = 1;
  string name = 2;
  uint32 age = 3; // Protobuf 没有 uint16, 使用 uint32
  uint32 gender = 4; // 0: UNKNOWN, 1: MALE, 2: FEMALE
  uint64 following_count = 5;
  uint64 follower_count = 6;
  uint64 total_favorite = 7;
  uint64 work_count = 8;
  uint64 favorite_count = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
}

// CreateUser RPC 的请求消息
message CreateUserRequest {
  string uuid = 1; // 必需，来自 Firebase
  string name = 2; // 必需
  // Age 和 Gender 在初次创建时可能是可选的
  optional uint32 age = 3;
  optional uint32 gender = 4;
}

// UpdateUser RPC 的请求消息
message UpdateUserRequest {
  string uuid = 1;   // 必需，指定要更新哪个用户
  string name = 2;   // 必需
  uint32 age = 3;    // 必需
  uint32 gender = 4; // 必需
}

// GetUserInformation RPC 的请求消息
message GetUserInformationRequest {
  string uuid = 1; // 必需
}