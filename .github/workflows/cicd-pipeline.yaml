name: Go CI/CD to Kind

on:
  push:
    branches:
      - master # Triggers the workflow on push to the master branch

jobs:
  build-and-deploy:
    runs-on: self-hosted
    outputs:
      gateway_changed: ${{ steps.changes.outputs.gateway }}
      user_service_changed: ${{ steps.changes.outputs.user_service }}
      video_service_changed: ${{ steps.changes.outputs.video_service }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find changed files
        id: changes
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            gateway:
              - cmd/gateway/**
              - internal/gateway/**
              - deploy/gateway/**
              - api/**
              - go.mod
              - go.sum
              - pkg/**
            user_service:
              - cmd/user_service/**
              - internal/user/**
              - deploy/user-service/**
              - api/proto/v1/user.proto
              - api/proto/v2/user.proto
              - go.mod
              - go.sum
              - pkg/**
            video_service:
              - cmd/video_service/**
              - internal/video/**
              - deploy/video-service/**
              - api/proto/v1/video.proto
              - go.mod
              - go.sum
              - pkg/**

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'

      - name: Run Go Tests
        run: go test -v ./...

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run Go Linter
        run: $(go env GOPATH)/bin/golangci-lint run ./...

      - name: Build Gateway Docker Image
        if: steps.changes.outputs.gateway == 'true'
        run: |
          docker build -t gateway:latest \
            --build-arg HTTP_PROXY=http://host.docker.internal:7897 \
            --build-arg HTTPS_PROXY=http://host.docker.internal:7897 \
            -f deploy/gateway/Dockerfile .

      - name: Build User Service Docker Image
        if: steps.changes.outputs.user_service == 'true'
        run: |
          docker build -t user-service:latest \
            --build-arg HTTP_PROXY=http://host.docker.internal:7897 \
            --build-arg HTTPS_PROXY=http://host.docker.internal:7897 \
            -f deploy/user-service/Dockerfile .

      - name: Build Video Service Docker Image
        if: steps.changes.outputs.video_service == 'true'
        run: |
          docker build -t video-service:latest \
            --build-arg HTTP_PROXY=http://host.docker.internal:7897 \
            --build-arg HTTPS_PROXY=http://host.docker.internal:7897 \
            -f deploy/video-service/Dockerfile .

      - name: Load Gateway Image into Kind
        if: steps.changes.outputs.gateway == 'true'
        run: kind load docker-image gateway:latest

      - name: Load User Service Image into Kind
        if: steps.changes.outputs.user_service == 'true'
        run: kind load docker-image user-service:latest

      - name: Load Video Service Image into Kind
        if: steps.changes.outputs.video_service == 'true'
        run: kind load docker-image video-service:latest

      - name: Deploy Gateway
        if: steps.changes.outputs.gateway == 'true'
        run: kubectl apply -f deploy/gateway/kubernetes/gateway.yaml

      - name: Deploy User Service
        if: steps.changes.outputs.user_service == 'true'
        run: kubectl apply -f deploy/user-service/kubernetes/user-service.yaml

      - name: Deploy Video Service
        if: steps.changes.outputs.video_service == 'true'
        run: kubectl apply -f deploy/video-service/kubernetes/video-service.yaml
